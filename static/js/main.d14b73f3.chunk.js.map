{"version":3,"sources":["service/ApiKey.js","service/ApiService.js","components/Searchbar/SearchbarStyles.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/TableScreen/TableScreen.jsx","components/Modal/StyledCloseBtn.js","components/Modal/Modal.jsx","App.js","index.js"],"names":["API_KEY","BASE_URL","fetchOn","query","pageNumber","pageCapacity","url","fetch","then","response","status","console","log","json","totalHits","hits","catch","error","StyledSearchbar","styled","header","StyledForm","form","StyledButton","button","StyledSpan","span","StyledInput","input","Searchbar","onSubmit","useState","inputedText","setInputedText","event","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","target","StyledListItem","li","StyledImage","img","ImageGalleryItem","id","lilPicUrl","bigPicUrl","tags","onClick","src","alt","title","data","StyledGallery","ul","ImageGallery","collection","map","picture","defaultProps","Button","btnText","StyledSpinnerBox","div","Spinner","visible","color","height","width","timeout","StyledMessage","p","TableScreen","message","StyledCloseBtn","Overlay","StyledModal","Modal","onClose","useEffect","window","addEventListener","removeEventListener","StyledDiv","App","setCollection","setQuery","setPageNumber","totalPictures","setTotalPictures","isBtnVisible","setIsBtnVisible","isSpinnerVisible","setIsSpinnerVisible","urlForModal","setUrlForModal","setError","galleryHandler","length","prevCollection","webformatURL","largeImageURL","finally","scrollBy","document","documentElement","clientHeight","screenMessage","code","nodeName","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d14b73f3.chunk.js","sourcesContent":["export const API_KEY = '20179181-b536d7b2e359c0533f6f56cb7';\n","import { API_KEY } from './ApiKey';\n\nconst BASE_URL = 'https://pixabay.com/api/';\n\nconst fetchOn = (query, pageNumber, pageCapacity = 12) => {\n  const url = `${BASE_URL}/?q=${query}&page=${pageNumber}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${pageCapacity} `;\n\n  return fetch(url)\n    .then(response => {\n      if (response.status !== 200) {\n        console.log('Server response by non 200 status');\n        return;\n      } else return response.json();\n    })\n    .then(({ totalHits, hits }) => {\n      return { hits, totalHits };\n    })\n    .catch(error => console.log('Server Error. Something gone wrong.', error));\n};\n\nexport default fetchOn;\n","import styled from 'styled-components';\n\nexport const StyledSearchbar = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const StyledButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const StyledSpan = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const StyledInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 1.125rem;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyledSearchbar,\n  StyledButton,\n  StyledForm,\n  StyledSpan,\n  StyledInput,\n} from './SearchbarStyles';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [inputedText, setInputedText] = useState('');\n\n  const inputHandler = ({ target }) => {\n    setInputedText(target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    onSubmit(inputedText);\n\n    setInputedText('');\n  };\n\n  return (\n    <StyledSearchbar>\n      <StyledForm onSubmit={formSubmitHandler}>\n        <StyledButton type=\"submit\">\n          <StyledSpan>Search</StyledSpan>\n        </StyledButton>\n\n        <StyledInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={inputedText}\n          onChange={inputHandler}\n        />\n      </StyledForm>\n    </StyledSearchbar>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Searchbar;\n\n/*\n// =============== Class Component ===============\n\nclass Searchbar extends Component {\n  state = { inputedText: '' };\n\n  inputHandler = event => {\n    this.setState({ inputedText: event.target.value });\n  };\n\n  formSubmitHandler = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state.inputedText);\n    this.setState({ inputedText: '' });\n  };\n\n  render() {\n    return (\n      <header className={styles.Searchbar}>\n        <form onSubmit={this.formSubmitHandler} className={styles.SearchForm}>\n          <button type=\"submit\" className={styles.SearchForm__button}>\n            <span className={styles['SearchForm__button-label']}>Search</span>\n          </button>\n\n          <input\n            className={styles.SearchForm__input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.inputedText}\n            onChange={this.inputHandler}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Searchbar;\n*/\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledListItem = styled.li`\n  border-radius: 2px;\n  overflow: hidden;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst StyledImage = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nconst ImageGalleryItem = ({ id, lilPicUrl, bigPicUrl, tags, onClick }) => {\n  return (\n    <StyledListItem key={id} onClick={() => onClick(bigPicUrl)}>\n      <StyledImage src={lilPicUrl} alt={tags} title={tags} data={bigPicUrl} />\n    </StyledListItem>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  lilPicUrl: PropTypes.string,\n  bigPicUrl: PropTypes.string,\n  tags: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from '../ImageGalleryItem';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledGallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin: 0 auto;\n  padding: 0;\n  list-style: none;\n`;\n\nconst ImageGallery = ({ collection, onClick }) => {\n  return (\n    <StyledGallery>\n      {collection.map(picture => (\n        <ImageGalleryItem\n          key={picture.id}\n          onClick={() => onClick(picture.bigPicUrl)}\n          id={picture.id}\n          lilPicUrl={picture.lilPicUrl}\n          bigPicUrl={picture.bigPicUrl}\n          tags={picture.tags}\n        />\n      ))}\n    </StyledGallery>\n  );\n};\n\nImageGallery.defaultProps = {\n  collection: [\n    {\n      id: 3295891,\n      lilPicUrl:\n        'https://pixabay.com/get/gb770f66d952c702d775af8030f534a313d6d926a64b10a982e3370d96f644aac37d1b4936df2e44f505663e64e1bc4effccf8b758c6344b2dae4ace19f28e4c6_640.jpg',\n      bigPicUrl:\n        'https://pixabay.com/get/g2eef296fd61c640231dd5a2882f825f73bbd55e2840b18d7f5b56b6e4e478815062ddc2c65376c107b005b8204f0cc75e3c998849527c91589c6d9ed0e64405d_1280.jpg',\n      tags: 'maki, curious, halfaap',\n    },\n  ],\n};\n\nImageGallery.propTypes = {\n  collection: PropTypes.arrayOf(PropTypes.object),\n  onClick: PropTypes.func,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  display: inline-block;\n  width: 180px;\n  height: 40px;\n  padding: 5px;\n  margin: 0 auto;\n\n  border: 3px solid lightgray;\n  border-radius: 8px;\n  outline: none;\n\n  background-color: #3f51b5;\n  color: #ffffff;\n  font-family: inherit;\n  font-size: 1.15rem;\n  font-style: normal;\n  font-weight: 500;\n  text-transform: uppercase;\n  text-align: center;\n  text-decoration: none;\n  line-height: 1.33;\n\n  overflow: hidden;\n  cursor: pointer;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ btnText, onClick }) => (\n  <StyledButton onClick={onClick}>{btnText}</StyledButton>\n);\n\nButton.defaultProps = {\n  btnText: 'click me',\n  onClick: () => null,\n};\n\nButton.propTypes = {\n  btnText: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n\n/*\nwindow.scrollTo({\n  top: document.documentElement.scrollHeight,\n  behavior: 'smooth',\n});\n*/\n","import Loader from 'react-loader-spinner';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledSpinnerBox = styled.div`\n  position: relative;\n  display: block;\n  margin: 0 auto;\n  width: 60px;\n  height: 60px;\n  text-align: center;\n  top: 0;\n`;\n\nconst Spinner = ({ visible }) => {\n  return (\n    <StyledSpinnerBox>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#303F9F\"\n        height={60}\n        width={60}\n        timeout={5000}\n        visible={visible}\n      />\n    </StyledSpinnerBox>\n  );\n};\n\nSpinner.defaultProps = {\n  visible: true,\n};\n\nSpinner.propTypes = {\n  visible: PropTypes.bool,\n};\n\nexport default Spinner;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledMessage = styled.p`\n  display: block;\n  margin: 0 auto;\n  padding: 5px 10px;\n  font-size: 1.2rem;\n  font-weight: 500;\n  color: #3f51b5;\n`;\n\nconst TableScreen = ({ message }) => {\n  return <StyledMessage>{message}</StyledMessage>;\n};\n\nTableScreen.defaultProps = {\n  message: ':)',\n};\n\nTableScreen.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default TableScreen;\n","import styled from 'styled-components';\n\nconst StyledCloseBtn = styled.button`\n  position: absolute;\n  top: 2%;\n  right: 4%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 48px;\n  height: 48px;\n  padding: 0;\n  margin: 0;\n  border: none;\n  border-radius: 50%;\n  background-color: transparent;\n  color: #fff;\n  cursor: pointer;\n  transition: background-color 250ms linear;\n  outline: none;\n  background-image: url('./closeBtn.svg');\n  background-position: center;\n  background-size: 60%;\n  background-repeat: no-repeat;\n\n  &:hover,\n  &:focus {\n    background-color: rgba(0, 0, 0, 0.8);\n  }\n`;\n\nexport default StyledCloseBtn;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport StyledCloseBtn from './StyledCloseBtn';\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nconst StyledModal = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nconst Modal = ({ url, onClose }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', onClose);\n\n    return () => window.removeEventListener('keydown', onClose);\n  }, []); //eslint-disable-line\n\n  return (\n    <Overlay onClick={onClose} id=\"backdrop\">\n      <StyledModal>\n        <img src={url} alt=\" \" />\n      </StyledModal>\n      <StyledCloseBtn onClick={onClose} type=\"button\"></StyledCloseBtn>\n    </Overlay>\n  );\n};\n\nModal.defaultProps = {\n  url:\n    'https://pixabay.com/get/g2eef296fd61c640231dd5a2882f825f73bbd55e2840b18d7f5b56b6e4e478815062ddc2c65376c107b005b8204f0cc75e3c998849527c91589c6d9ed0e64405d_1280.jpg',\n};\n\nModal.propTypes = {\n  url: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default Modal;\n","import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport fetchOn from './service/ApiService';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Spinner from './components/Loader';\nimport TableScreen from './components/TableScreen';\nimport Modal from './components/Modal';\n\nconst StyledDiv = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\n\nconst App = () => {\n  const [collection, setCollection] = useState([]);\n  const [query, setQuery] = useState('');\n  let [pageNumber, setPageNumber] = useState(1);\n  const [totalPictures, setTotalPictures] = useState();\n  const [isBtnVisible, setIsBtnVisible] = useState(false);\n  const [isSpinnerVisible, setIsSpinnerVisible] = useState(false);\n  const [urlForModal, setUrlForModal] = useState('');\n  const [error, setError] = useState('');\n\n  const inputSubmitHandler = inputedText => {\n    setPageNumber(1);\n    setQuery(inputedText);\n    setCollection([]);\n    setIsBtnVisible(false);\n    setIsSpinnerVisible(true);\n    setUrlForModal('');\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    galleryHandler();\n  }, [query]); //eslint-disable-line\n\n  const galleryHandler = () => {\n    fetchOn(query, pageNumber)\n      .then(({ totalHits, hits }) => {\n        hits.length === 0 && setError('Please check your query and try again');\n\n        setTotalPictures(totalHits);\n\n        setCollection(prevCollection => [\n          ...prevCollection,\n          ...hits.map(({ id, webformatURL, largeImageURL, tags }) => ({\n            id,\n            lilPicUrl: webformatURL,\n            bigPicUrl: largeImageURL,\n            tags,\n          })),\n        ]);\n      })\n      .catch(error => setError(error.message))\n      .finally(() => setIsSpinnerVisible(false));\n  };\n\n  const getNewPictures = () => {\n    setPageNumber(++pageNumber);\n    setIsSpinnerVisible(true);\n\n    galleryHandler();\n  };\n\n  useEffect(() => {\n    collection.length > 12 &&\n      window.scrollBy(0, document.documentElement.clientHeight - 140);\n\n    collection.length / pageNumber === 12\n      ? setIsBtnVisible(true)\n      : setIsBtnVisible(false);\n  }, [collection]); //eslint-disable-line\n\n  const screenMessage = totalPictures\n    ? `${totalPictures} images in the album`\n    : error;\n\n  const clickOnImageHandler = url => setUrlForModal(url);\n\n  const modalCloseHandler = ({ target, code }) => {\n    (target.id === 'backdrop' || target.nodeName === 'BUTTON') &&\n      setUrlForModal('');\n\n    if (code !== 'Escape') return;\n    code === 'Escape' && setUrlForModal('');\n  };\n\n  return (\n    <StyledDiv>\n      <Searchbar onSubmit={inputSubmitHandler} />\n\n      <TableScreen message={screenMessage} />\n\n      {collection ? (\n        <ImageGallery collection={collection} onClick={clickOnImageHandler} />\n      ) : null}\n\n      {isSpinnerVisible && <Spinner />}\n\n      {isBtnVisible && (\n        <Button btnText={'load more'} onClick={getNewPictures} />\n      )}\n\n      {urlForModal && <Modal url={urlForModal} onClose={modalCloseHandler} />}\n    </StyledDiv>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'modern-normalize';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}